# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:

- task: DownloadSecureFile@1
  inputs:
    secureFile: 'supersecret.tfvars'

- script: |
    cat supersecret.tfvars 
- task: TerraformInstaller@0
  inputs:
    terraformVersion: '0.12.18'
- task: TerraformCLI@0
  inputs:
    command: 'init'
    backendType: 'azurerm'
    backendServiceArm: 'Gabriel-Internal(0e9fb02c-62eb-4d75-a174-1d1f01d6dc27)'
    ensureBackend: true
    backendAzureRmResourceGroupName: 'terraform'
    backendAzureRmResourceGroupLocation: 'uksouth'
    backendAzureRmStorageAccountName: 'ganepomutfstate'
    backendAzureRmStorageAccountSku: 'Standard_LRS'
    backendAzureRmContainerName: 'tfstate'
    backendAzureRmKey: 'tfdemo-take.tfstate'
    workingDirectory: $(System.DefaultWorkingDirectory)/1-exemplo

- task: TerraformCLI@0
  inputs:
    command: 'validate'
    workingDirectory: '$(System.DefaultWorkingDirectory)/1-exemplo'

- task: TerraformCLI@0
  inputs:
    command: 'plan'
    workingDirectory: '$(System.DefaultWorkingDirectory)/1-exemplo'
    environmentServiceName: 'Gabriel-Internal(0e9fb02c-62eb-4d75-a174-1d1f01d6dc27)'

